{"version":3,"sources":["Elements/Button.js","Elements/GreenDiv.js","Elements/GreenButton.js","Elements/Title.js","components/ScoreCard.js","Elements/ExitButton.js","components/Board.js","components/Mode.js","components/SelectPlayer.js","helper.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["animation","keyframes","Button","styled","button","props","width","height","color","backgroundColor","GreenDiv","div","GreenButton","value","onClick","children","Title","Score","span","turn","check","ScoreCard","Turn","xScore","oScore","ExitButton","clikExit","className","Board","squares","AI","Winner","WinningSquares","ShowSquares","playAgain","renderSquare","i","indexOf","Credit","Mode","clickHumanBtn","clickAIBtn","SelectPlayer","xClick","oClick","checkWinner","board","winnner","winConditions","length","a","b","c","findWinner","draw","square","isDraw","scoresX","X","O","d","scoresO","Random","min","max","Math","ceil","floor","random","MMax","depth","is_max","ai","hn","alpha","Infinity","beta","winner","bestScore","score","AImove","HN","bestMove","slice","Main","useState","Array","fill","setSquare","mode","setMode","setTurn","setAI","ScoreX","setScoreX","ScoreO","setScoreO","setWinner","setWinningSquares","setShowSquares","useEffect","console","log","handleClick","setTimeout","changeTurn","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef697093.chunk.js","sourcesContent":["import styled, { keyframes } from \"styled-components\"\r\n\r\nconst animation = keyframes`\r\n    0% { background-position: 0 0; }\r\n    50% { background-position: 400% 0; }\r\n    100% { background-position: 0 0; }\r\n`\r\nconst Button = styled.button `\r\n    @import url('https://fonts.googleapis.com/css2?family=Coda+Caption:wght@800&family=Luckiest+Guy&display=swap');\r\n    width: ${props=>props.width?props.width:'auto'};\r\n    height: ${props => props.height ? props.height : '100px'};\r\n    margin: 0.5%;\r\n    border: none;\r\n    outline: none;\r\n    color: ${props => props.color ? props.color:\"#fff\"};\r\n    background: ${props => props.backgroundColor ? props.backgroundColor : \"#111\"};\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 0;\r\n    border-radius: 10px;\r\n    font-size: 50px;\r\n    font-family: 'Coda Caption', sans-serif;\r\n    font-family: 'Luckiest Guy', cursive;\r\n\r\n    &:before{\r\n        content: '';\r\n        background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);\r\n        position: absolute;\r\n        top: -2px;\r\n        left:-2px;\r\n        background-size: 400%;\r\n        z-index: -1;\r\n        filter: blur(5px);\r\n        width: calc(100% + 4px);\r\n        height: calc(100% + 4px);\r\n        animation: ${animation} 20s linear infinite;\r\n        opacity: 0;\r\n        transition: opacity .3s ease-in-out;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    &:after{\r\n        z-index: -1;\r\n        content: '';\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: #111;\r\n        left: 0;\r\n        top: 0;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    &:hover:before {\r\n        opacity: 1;\r\n    }\r\n\r\n    &:active:after {\r\n        background: transparent;\r\n    }\r\n\r\n    &:active {\r\n        color: #000\r\n    }  \r\n`\r\nexport default Button;","import styled, { keyframes } from \"styled-components\"\r\n\r\nconst GreenDiv = styled.div`\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-top: 1%;\r\n\r\n    button{\r\n        margin-bottom: 50px;\r\n        @media (max-width: 768px) {\r\n            min-width: 150px;\r\n            min-height: 30px;\r\n        }\r\n        min-width: 300px;\r\n        min-height: 60px;\r\n        font-family: 'Nunito', sans-serif;\r\n        font-size: 22px;\r\n        text-transform: uppercase;\r\n        letter-spacing: 1.3px;\r\n        font-weight: 700;\r\n        color: #000;\r\n        background: #39ff14;\r\n        background: linear-gradient(90deg, rgb(129, 230, 129) 0%, rgb(142, 209, 79) 100%);\r\n        border: none;\r\n        border-radius: 1000px;\r\n        box-shadow: 12px 12px 24px rgba(113, 235, 37, 0.64);\r\n        transition: all 0.3s ease-in-out 0s;\r\n        cursor: pointer;\r\n        outline: none;\r\n        position: relative;\r\n        padding: 10px;\r\n    }\r\n    button:before{\r\n        content: '';\r\n        border-radius: 1000px;\r\n        @media (max-width: 768px) {\r\n            min-width: calc(150px + 15px);\r\n            min-height: calc(30px + 25px);\r\n        }\r\n        \r\n        min-width: calc(300px + 12px);\r\n        min-height: calc(60px + 12px);\r\n        border: 6px solid #39ff14;\r\n        box-shadow: 0 0 60px rgba(129, 255, 64, 0.64);\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        opacity: 0;\r\n        transition: all .3s ease-in-out 0s;\r\n    }\r\n\r\n    button:hover, button:focus{\r\n        color: whitesmoke;\r\n        transform: translateY(-6px);\r\n    }\r\n\r\n    button:hover:before, button:focus:before{\r\n        opacity: 1;\r\n    }\r\n    \r\n    button:after{\r\n        content: '';\r\n        width: 30px; \r\n        height: 30px;\r\n        border-radius: 100%;\r\n        /* border: 6px solid #39ff14; */\r\n        position: absolute;\r\n        z-index: -1;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n`\r\nexport default GreenDiv;","import React from 'react'\r\nimport GreenDiv from './GreenDiv'\r\nfunction GreenButton({ value, onClick,children}) {\r\n    return (\r\n        <GreenDiv><button onClick={onClick}>{children}</button></GreenDiv>\r\n    )\r\n}\r\n\r\nexport default GreenButton\r\n","import styled from 'styled-components'\r\n\r\nconst Title = styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Coda+Caption:wght@800&family=Luckiest+Guy&display=swap');\r\n    color: #39ff14;\r\n    font-size: 100px;\r\n    font-family: 'Coda Caption', sans-serif;\r\n    font-family: 'Luckiest Guy', cursive;\r\n    margin-top: 10%;\r\n`\r\nexport default Title;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Button from '../Elements/Button'\r\n\r\nconst Score = styled.span`\r\n    @import url('https://fonts.googleapis.com/css2?family=Coda+Caption:wght@800&family=Luckiest+Guy&display=swap');\r\n    color: ${props => props.turn === props.check ? \"#39ff14\": \"whitesmoke\"};\r\n    font-size: 50px;\r\n    font-family: 'Coda Caption', sans-serif;\r\n    font-family: 'Luckiest Guy', cursive;\r\n    margin-top: 5px;\r\n`\r\nfunction ScoreCard({Turn,xScore,oScore}) {\r\n    return (\r\n        <div>\r\n            <Button width={'100px'} height={'100px'}>X</Button>\r\n            {Turn === 'X' && <Score>&#8594;</Score>}\r\n            <Score turn={Turn} check='X'>{xScore}</Score>\r\n            <Button width={'100px'} height={'100px'}>O</Button>\r\n            {Turn === 'O' && <Score>&#8594;</Score>}\r\n            <Score turn={Turn} check='O'>{oScore}</Score>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ScoreCard\r\n","import React from 'react'\r\nimport \"../Elements/CSS/exit.css\"\r\nfunction ExitButton({clikExit}) {\r\n    return (\r\n        <div className=\"Exit\">\r\n            <a onClick={clikExit}>\r\n                <span className=\"Left\">\r\n                    <span className=\"CircleLeft\"></span>\r\n                    <span className=\"CircleRight\"></span>\r\n                </span>\r\n                <span className=\"Right\">\r\n                    <span className=\"CircleLeft\"></span>\r\n                    <span className=\"CircleRight\"></span>\r\n                </span>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExitButton\r\n","import Button from '../Elements/Button'\r\nimport GreenButton from '../Elements/GreenButton'\r\nimport Title from '../Elements/Title'\r\nimport ScoreCard from './ScoreCard'\r\nimport ExitButton from '../Elements/ExitButton'\r\nfunction Board({ squares, onClick, Turn, AI, xScore, oScore, Winner, WinningSquares, ShowSquares, playAgain, clikExit}) {\r\n    \r\n    const renderSquare=(i)=>{\r\n        const color = WinningSquares !== null && WinningSquares.indexOf(i) !== -1 ?'#39ff14':null\r\n        return <Button color={color} width={'100px'} height={'100px'} onClick={() => { onClick(i) }}>{!squares[i] ? '.' : squares[i]}</Button>\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Title>{Winner === 'd' ? \"Draw\" : Winner !== null && \"Winner: \" + Winner}</Title>\r\n            {Winner === null && <ScoreCard Turn={Turn} xScore={xScore} oScore={oScore} />}\r\n            {ShowSquares &&\r\n                <div>\r\n                    <div>\r\n                        {renderSquare(0)}\r\n                        {renderSquare(1)}\r\n                        {renderSquare(2)}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {renderSquare(3)}\r\n                        {renderSquare(4)}\r\n                        {renderSquare(5)}\r\n                    </div>\r\n\r\n                    <div>\r\n                        {renderSquare(6)}\r\n                        {renderSquare(7)}\r\n                        {renderSquare(8)}\r\n                    </div>\r\n                </div>\r\n            }\r\n            {!ShowSquares && \r\n                <div>\r\n                    <GreenButton onClick={playAgain}>Play Again</GreenButton>\r\n                    <ExitButton clikExit={clikExit}/>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React from 'react'\r\nimport Title from '../Elements/Title'\r\nimport styled from 'styled-components'\r\nimport GreenButton from '../Elements/GreenButton'\r\n\r\nconst Credit=styled.div`\r\n    @import url('https://fonts.googleapis.com/css2?family=Itim&display=swap');\r\n    color: white;\r\n    font-family: 'Itim', cursive;\r\n    font-size:17px;\r\n`\r\nfunction Mode({ clickHumanBtn, clickAIBtn}) {\r\n    return (\r\n        <>\r\n            <Title>Tic Tac Toe</Title>\r\n            <GreenButton onClick={clickHumanBtn}>Two Player</GreenButton>\r\n            <GreenButton onClick={clickAIBtn}>One Player</GreenButton>\r\n            <Credit>\r\n                By Abdulrafay\r\n            </Credit>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mode\r\n","import React from 'react'\r\nimport Title from '../Elements/Title'\r\nimport Button from '../Elements/Button'\r\nfunction SelectPlayer({ xClick, oClick}) {\r\n    return (\r\n        <>\r\n            <Title>Select Player</Title>\r\n            <Button width={'100px'} height={'100px'} onClick={xClick}>X</Button>\r\n            <Button width={'100px'} height={'100px'} onClick={oClick}>O</Button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectPlayer\r\n","function findWinner(squares){\r\n    const winConditions = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < winConditions.length; i++) {\r\n        const [a, b, c] = winConditions[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[b] === squares[c])\r\n            return [squares[a], winConditions[i]];\r\n    }\r\n    return null;\r\n}\r\n\r\nfunction isDraw(square) {\r\n    for (let i = 0; i < 9; i++) {\r\n        if (square[i] === null) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction checkWinner(board) {\r\n    const winnner=findWinner(board);\r\n    const draw = isDraw(board);\r\n    if (winnner!==null)\r\n        return winnner\r\n    else\r\n    if(draw)\r\n        return \"draw\"\r\n    else\r\n        return null\r\n}\r\n\r\nlet scoresX = {\r\n    X: 10,\r\n    O: -10,\r\n    d: 0\r\n}\r\n\r\nlet scoresO = {\r\n    X: -10,\r\n    O: 10,\r\n    d: 0\r\n}\r\n\r\nfunction Random(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction MMax(board,depth,is_max,ai,hn,alpha=-Infinity,beta=Infinity)\r\n{\r\n    let winner = checkWinner(board);\r\n    \r\n    if (winner)\r\n    {\r\n        return ai === 'X' ? scoresX[winner[0]]:scoresO[winner[0]]\r\n    }\r\n\r\n    if(is_max)\r\n    {\r\n        let bestScore=-Infinity\r\n        for (let i = 0; i < 9; i++)\r\n        {\r\n            if (board[i]==null)\r\n            {\r\n                board[i] = ai//.\r\n                let score = MMax(board, depth + 1, false,ai,hn, alpha, beta) + Random(-5,5)\r\n                board[i] = null\r\n                bestScore=Math.max(score,bestScore)\r\n                alpha=Math.max(alpha,score)\r\n                if(beta>=alpha)\r\n                    return 0;\r\n            }\r\n        }\r\n        return bestScore;\r\n    }\r\n    else\r\n    {\r\n        let bestScore = Infinity\r\n        for (let i = 0; i < 9; i++) {\r\n            if (board[i] == null) {\r\n                board[i] = hn//.\r\n                let score = MMax(board, depth + 1, true, ai, hn, alpha, beta) + Random(-5, 5)\r\n                board[i] = null\r\n                bestScore = Math.min(score, bestScore)\r\n                alpha = Math.min(beta, score)\r\n                if (alpha >= beta)\r\n                    return 1;\r\n            }\r\n        }\r\n        return bestScore;\r\n    }\r\n}\r\n\r\nfunction AImove(square, Turn, HN) {\r\n    let board = square.slice()\r\n    let bestScore = -Infinity\r\n    let bestMove;\r\n    for (let i = 0; i < 9; i++) {\r\n        if (board[i] === null) {\r\n            board[i] = Turn\r\n            let score = MMax(board, 0, false,Turn,HN)\r\n            board[i] = null\r\n            if (score > bestScore) {\r\n                bestScore = score\r\n                bestMove = i\r\n            }\r\n        }\r\n    }\r\n    return bestMove\r\n}\r\n\r\nexport { checkWinner, AImove}","import React,{useState,useEffect} from 'react'\r\nimport Board from './Board'\r\nimport Mode from '../components/Mode'\r\nimport SelectPlayer from './SelectPlayer';\r\nimport {checkWinner,AImove} from '../helper'\r\nfunction Main() {\r\n    const [square, setSquare] = useState(Array(9).fill(null));\r\n    const [mode, setMode] = useState(null)\r\n    const [Turn, setTurn] = useState(null)\r\n    const [AI, setAI] = useState(null)\r\n    const [ScoreX, setScoreX] = useState(0)\r\n    const [ScoreO, setScoreO] = useState(0)\r\n    const [Winner, setWinner] = useState(null)\r\n    const [WinningSquares, setWinningSquares] = useState(null)\r\n    const [ShowSquares, setShowSquares] = useState(true)\r\n\r\n    useEffect(() => {\r\n        if (mode && AI == Turn) {\r\n            console.log(AImove(square, AI, AI == 'X' ? 'O' : 'X'));\r\n            handleClick(AImove(square, AI, AI == 'X' ? 'O' : 'X'))\r\n        }\r\n        const winner = checkWinner(square)\r\n        setWinner(winner?winner[0]:winner)\r\n        setWinningSquares(winner ? winner[1] : winner)\r\n        \r\n    }, [square]);\r\n\r\n    const countDown = (winner) => {\r\n        setTimeout(() => {\r\n            changeTurn()\r\n            setShowSquares(false)\r\n            setWinner(null)\r\n        }, 2000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Winner==='X')\r\n        {\r\n            setScoreX(ScoreX=>ScoreX+1)\r\n        }\r\n        else\r\n        if(Winner==='O')\r\n        {\r\n            setScoreO(ScoreO =>ScoreO+1)\r\n        }\r\n        Winner!==null && countDown()\r\n    }, [Winner])\r\n\r\n    let changeTurn=()=>{\r\n        if(Turn==='X')\r\n            setTurn('O')\r\n        else\r\n        if(Turn==='O')\r\n            setTurn('X')\r\n    }\r\n\r\n    const handleClick=(i)=>{\r\n        const squares = square.slice()\r\n        if (squares[i] || Winner) {\r\n            return;\r\n        }\r\n        squares[i] = Turn\r\n        setSquare(squares) \r\n        changeTurn()\r\n    }\r\n\r\n    const clickHumanBtn=()=>{\r\n        setMode(false)\r\n    }\r\n\r\n    const clickAIBtn = () => {\r\n        setMode(true)\r\n    }\r\n\r\n    const oPlayerSelect = () => {\r\n        setTurn('O')\r\n        setAI('X')\r\n    }\r\n\r\n    const xPlayerSelect = () => {\r\n        setTurn('X')\r\n        setAI('O')\r\n    }\r\n\r\n    const playAgain=()=>{\r\n        setSquare(Array(9).fill(null));\r\n        setShowSquares(true)\r\n    }\r\n\r\n    const clikExit=()=>{\r\n        setScoreO(0);\r\n        setScoreX(0);\r\n        setShowSquares(true);\r\n        setWinner(null);\r\n        setSquare(Array(9).fill(null));\r\n        setTurn(null);\r\n        setMode(null);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                mode===null?<Mode clickHumanBtn={clickHumanBtn} clickAIBtn={clickAIBtn} />\r\n                    : Turn ? <Board clikExit={clikExit} playAgain={playAgain} ShowSquares={ShowSquares} mode={mode} Winner={Winner} Turn={Turn} AI={AI} squares={square} onClick={handleClick} xScore={ScoreX} oScore={ScoreO} WinningSquares={WinningSquares}/>\r\n                    : <SelectPlayer oClick={oPlayerSelect} xClick={xPlayerSelect}/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import './App.css';\nimport Main from './components/Main'\nfunction App() {\n\n  return (\n    <>\n      <Main/ >\n    </>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}